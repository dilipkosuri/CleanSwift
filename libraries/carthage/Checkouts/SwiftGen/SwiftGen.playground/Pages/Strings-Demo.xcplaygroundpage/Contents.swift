//: #### Other pages
//:
//: * Demo for `swiftgen strings`
//: * [Demo for `swiftgen images`](Images-Demo)
//: * [Demo for `swiftgen storyboards`](Storyboards-Demo)
//: * [Demo for `swiftgen colors`](Colors-Demo)
//: * [Demo for `swiftgen fonts`](Fonts-Demo)

//: #### Example of code generated by swiftgen-l10n

// Generated using SwiftGen, by O.Halligon â€” https://github.com/SwiftGen/SwiftGen

import Foundation

enum L10n {
    case alertMessage
    case alertTitle
    case applesCount(Int)
    case bananasOwner(Int, String)
    case greetings(String, Int)
    case objectOwnership(Int, String, String)
}
// swiftlint:enable type_body_length

extension L10n: CustomStringConvertible {
    var description: String { return self.string }

    var string: String {
        switch self {
        case .alertMessage:
            return L10n.tr(key: "alert_message")
        case .alertTitle:
            return L10n.tr(key: "alert_title")
        case .applesCount(let p0):
            return L10n.tr(key: "apples.count", p0)
        case .bananasOwner(let p0, let p1):
            return L10n.tr(key: "bananas.owner", p0, p1)
        case .greetings(let p0, let p1):
            return L10n.tr(key: "greetings", p0, p1)
        case .objectOwnership(let p0, let p1, let p2):
            return L10n.tr(key: "ObjectOwnership", p0, p1, p2)
        }
    }

    private static func tr(key: String, _ args: CVarArg...) -> String {
        let format = NSLocalizedString(key, comment: "")
        return String(format: format, locale: Locale.current, arguments: args)
    }
}

func tr(_ key: L10n) -> String {
    return key.string
}

//: #### Usage example

let alertTitle = tr(.alertTitle)
let hello1 = tr(.greetings("David", 29))
let hello2 = L10n.greetings("Olivier", 32) // Prints as a string in the console because it's CustomStringConvertible

// note the inversion of parameters' order due to usage of %1$d, %2$@ and %1$@ in Localizable.strings
tr(.objectOwnership(3, "Apples", "John"))
